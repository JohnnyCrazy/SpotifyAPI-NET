<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WebMatrix.Data</name>
  </assembly>
  <members>
    <member name="T:WebMatrix.Data.ConnectionEventArgs">
      <summary>Provides data for the <see cref="E:WebMatrix.Data.Database.ConnectionOpened" /> event of the <see cref="T:WebMatrix.Data.Database" /> class.</summary>
    </member>
    <member name="M:WebMatrix.Data.ConnectionEventArgs.#ctor(System.Data.Common.DbConnection)">
      <summary>Initializes a new instance of the <see cref="T:WebMatrix.Data.ConnectionEventArgs" /> class.</summary>
      <param name="connection">The connection that is associated with the event.</param>
    </member>
    <member name="P:WebMatrix.Data.ConnectionEventArgs.Connection">
      <summary>Gets the connection that is associated with the event.</summary>
      <returns>The connection that was opened.</returns>
    </member>
    <member name="T:WebMatrix.Data.Database">
      <summary>Provides methods and properties that are used to access and manage data that is stored in a database.</summary>
    </member>
    <member name="M:WebMatrix.Data.Database.Close">
      <summary>Closes an open database.</summary>
    </member>
    <member name="P:WebMatrix.Data.Database.Connection">
      <summary>Gets the current connection to a database.</summary>
      <returns>The connection.</returns>
    </member>
    <member name="E:WebMatrix.Data.Database.ConnectionOpened">
      <summary>Occurs when a new database connection is opened by a <see cref="T:WebMatrix.Data.Database" /> instance.</summary>
    </member>
    <member name="M:WebMatrix.Data.Database.Dispose">
      <summary>Releases all resources used by a <see cref="T:WebMatrix.Data.Database" /> instance.</summary>
    </member>
    <member name="M:WebMatrix.Data.Database.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by a <see cref="T:WebMatrix.Data.Database" /> instance and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:WebMatrix.Data.Database.Execute(System.String,System.Object[])">
      <summary>Executes a non-query SQL statement.</summary>
      <returns>The count of records affected by the SQL statement.</returns>
      <param name="commandText">The SQL statement to execute.</param>
      <param name="args">(Optional) Parameters to pass to the SQL statement.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="commandText" /> is null or empty.</exception>
    </member>
    <member name="M:WebMatrix.Data.Database.GetLastInsertId">
      <summary>Returns the identity column of the most recently inserted row.</summary>
      <returns>The ID of the most recently inserted row.</returns>
    </member>
    <member name="M:WebMatrix.Data.Database.Open(System.String)">
      <summary>Opens a connection to a database using the specified file name or using the named connection string.</summary>
      <returns>The database instance.</returns>
      <param name="name">The name associated with the database to open. <paramref name="name" /> can specify an .sdf or .mdf database file that is in the App_Data folder. (Do not include the file-name extension.) Alternatively, <paramref name="name" /> can specify the name of a connection string in the Web.config file.</param>
    </member>
    <member name="M:WebMatrix.Data.Database.OpenConnectionString(System.String)">
      <summary>Opens a connection to a database using the specified connection string.</summary>
      <returns>The database instance.</returns>
      <param name="connectionString">The connection string that contains information that is used to connect to a database.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionString" /> is null or empty.</exception>
    </member>
    <member name="M:WebMatrix.Data.Database.OpenConnectionString(System.String,System.String)">
      <summary>Opens a connection to a database using a connection string and the specified provider.</summary>
      <returns>The database instance.</returns>
      <param name="connectionString">The connection string that contains information that is used to connect to a database.</param>
      <param name="providerName">(Optional) The name of the .NET Framework data provider to use to connect to the data source.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionString" /> is null or empty.</exception>
    </member>
    <member name="M:WebMatrix.Data.Database.Query(System.String,System.Object[])">
      <summary>Executes a SQL query that returns a list of rows as the result.</summary>
      <returns>The rows returned by the SQL query.</returns>
      <param name="commandText">The SQL query to execute.</param>
      <param name="parameters">(Optional) Parameters to pass to the SQL query.</param>
    </member>
    <member name="M:WebMatrix.Data.Database.QuerySingle(System.String,System.Object[])">
      <summary>Executes a SQL query that returns a single row as the result.</summary>
      <returns>The single row returned by the SQL query.</returns>
      <param name="commandText">The SQL query to execute.</param>
      <param name="args">(Optional) Parameters to pass to the SQL query.</param>
    </member>
    <member name="M:WebMatrix.Data.Database.QueryValue(System.String,System.Object[])">
      <summary>Executes a SQL query that returns a single scalar value as the result.</summary>
      <returns>The scalar value returned by the SQL query.</returns>
      <param name="commandText">The SQL query to execute.</param>
      <param name="args">(Optional) Parameters to pass to the SQL query.</param>
    </member>
    <member name="T:WebMatrix.Data.DynamicRecord">
      <summary>Represents a data record by using a custom type descriptor and the capabilities of the Dynamic Language Runtime (DLR).</summary>
    </member>
    <member name="P:WebMatrix.Data.DynamicRecord.Columns">
      <summary>Returns a list that contains the name of each column in the <see cref="T:WebMatrix.Data.DynamicRecord" /> instance.</summary>
      <returns>A list that contains the name of each column.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.GetDynamicMemberNames">
      <summary>Returns a list that contains the name of all dynamic members of the <see cref="T:WebMatrix.Data.DynamicRecord" /> instance.</summary>
      <returns>A list that contains the name of every dynamic member.</returns>
    </member>
    <member name="P:WebMatrix.Data.DynamicRecord.Item(System.Int32)">
      <summary>Returns the value of a column in the <see cref="T:WebMatrix.Data.DynamicRecord" /> instance using the specified index.</summary>
      <returns>The value of the specified column.</returns>
    </member>
    <member name="P:WebMatrix.Data.DynamicRecord.Item(System.String)">
      <summary>Returns the value of a column in the <see cref="T:WebMatrix.Data.DynamicRecord" /> instance using the specified name.</summary>
      <returns>The value of the specified column.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a list of custom attributes for this instance of a component.</summary>
      <returns>
        <see cref="P:System.ComponentModel.AttributeCollection.Empty" /> in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name for this instance of a component.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the name for this instance of a component.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns the type converter for this instance of a component.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for this instance of a component.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for this instance of a component.</summary>
      <returns>null in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component.</summary>
      <returns>null in all cases.</returns>
      <param name="editorBaseType">The editor for this object. The value of this parameter is ignored by this implementation and does not affect the outcome of this method.</param>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the events for this instance of a component.</summary>
      <returns>
        <see cref="P:System.ComponentModel.EventDescriptorCollection.Empty" /> in all cases.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the events for this instance of a component by using the specified filter.</summary>
      <returns>
        <see cref="P:System.ComponentModel.EventDescriptorCollection.Empty" /> in all cases.</returns>
      <param name="attributes">An array that is used as a filter. The value of this parameter is ignored by this implementation and does not affect the outcome of this method.</param>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the properties for this instance of a component.</summary>
      <returns>A collection that represents the properties for this component instance.</returns>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the properties for this instance of a component by using the specified filter.</summary>
      <returns>A collection that represents the properties for this component instance.</returns>
      <param name="attributes">An array that is used as a filter. The value of this parameter is ignored by this implementation and does not affect the outcome of this method.</param>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns the object that contains the specified property.</summary>
      <returns>This <see cref="T:WebMatrix.Data.DynamicRecord" /> instance.</returns>
      <param name="pd">The property to get the owner of.</param>
    </member>
    <member name="M:WebMatrix.Data.DynamicRecord.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Gets the value of a <see cref="T:WebMatrix.Data.DynamicRecord" /> member using the specified name.</summary>
      <returns>true in all cases.</returns>
      <param name="binder">Provides information about the get operation.</param>
      <param name="result">When this method returns, contains the value of the member, which can be null. This parameter is passed uninitialized.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:WebMatrix.Data.DynamicRecord" /> instance does not contain a member whose name is a case-insensitive match with the name that is specified by the <paramref name="binder" /> parameter.</exception>
    </member>
  </members>
</doc>