"use strict";(self.webpackChunkspotify_api_docs=self.webpackChunkspotify_api_docs||[]).push([[7877],{4095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>u});var i=n(3274),s=n(2443);const r={id:"unit_testing",title:"Unit Testing"},o=void 0,a={id:"unit_testing",title:"Unit Testing",description:"The modular structure of the library makes it easy to mock the API when unit testing. Consider the following method:",source:"@site/docs/unit_testing.md",sourceDirName:".",slug:"/unit_testing",permalink:"/SpotifyAPI-NET/docs/unit_testing",draft:!1,unlisted:!1,editUrl:"https://github.com/JohnnyCrazy/SpotifyAPI-NET/edit/master/SpotifyAPI.Docs/docs/unit_testing.md",tags:[],version:"current",lastUpdatedBy:"Jonas Dellinger",lastUpdatedAt:1728769969,formattedLastUpdatedAt:"Oct 12, 2024",frontMatter:{id:"unit_testing",title:"Unit Testing"},sidebar:"docs",previous:{title:"IPlayableItem",permalink:"/SpotifyAPI-NET/docs/iplayableitem"},next:{title:"Introduction",permalink:"/SpotifyAPI-NET/docs/auth_introduction"}},c={},u=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"The modular structure of the library makes it easy to mock the API when unit testing. Consider the following method:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'public static async Task<bool> IsAdmin(IUserProfileClient userProfileClient)\n{\n  // get logged in user\n  var user = await userProfileClient.Current();\n\n  // only my user id is an admin\n  return user.Id == "1122095781";\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Using ",(0,i.jsx)(t.code,{children:"Moq"}),", this can be tested without doing any network requests:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'[Test]\npublic async Task IsAdmin_SuccessTest()\n{\n  var userProfileClient = new Mock<IUserProfileClient>();\n  userProfileClient.Setup(u => u.Current()).Returns(\n    Task.FromResult(new PrivateUser\n    {\n      Id = "1122095781"\n    })\n  );\n\n  Assert.AreEqual(true, await IsAdmin(userProfileClient.Object));\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},2443:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(9474);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);