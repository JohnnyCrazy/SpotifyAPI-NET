"use strict";(self.webpackChunkspotify_api_docs=self.webpackChunkspotify_api_docs||[]).push([[5068],{6340:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=n(2488),i=n(7052);const r={id:"logging",title:"Logging"},s=void 0,a={id:"logging",title:"Logging",description:"The library provides a way to inject your own, custom HTTP Logger. By default, no logging is performed.",source:"@site/docs/logging.md",sourceDirName:".",slug:"/logging",permalink:"/SpotifyAPI-NET/docs/logging",draft:!1,unlisted:!1,editUrl:"https://github.com/JohnnyCrazy/SpotifyAPI-NET/edit/master/SpotifyAPI.Docs/docs/logging.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1727960431,formattedLastUpdatedAt:"Oct 3, 2024",frontMatter:{id:"logging",title:"Logging"},sidebar:"docs",previous:{title:"Configuration",permalink:"/SpotifyAPI-NET/docs/configuration"},next:{title:"Proxy",permalink:"/SpotifyAPI-NET/docs/proxy"}},c={},l=[{value:"SimpleConsoleHTTPLogger",id:"simpleconsolehttplogger",level:2}];function g(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"The library provides a way to inject your own, custom HTTP Logger. By default, no logging is performed."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:'var config = SpotifyClientConfig\n  .CreateDefault("YourAccessToken")\n  .WithHTTPLogger(new YourHTTPLogger());\n\nvar spotify = new SpotifyClient(config);\n'})}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"IHTTPLogger"})," interface can be found ",(0,t.jsx)(o.a,{href:"https://github.com/JohnnyCrazy/SpotifyAPI-NET/blob/master/SpotifyAPI.Web/Http/Interfaces/IHTTPLogger.cs",children:"here"}),"."]}),"\n",(0,t.jsx)(o.h2,{id:"simpleconsolehttplogger",children:"SimpleConsoleHTTPLogger"}),"\n",(0,t.jsx)(o.p,{children:"The library ships with a simple console-based logger."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:'var config = SpotifyClientConfig\n  .CreateDefault("YourAccessToken")\n  .WithHTTPLogger(new SimpleConsoleHTTPLogger());\n\nvar spotify = new SpotifyClient(config);\n'})}),"\n",(0,t.jsx)(o.p,{children:"This logger produces a simple console output for debugging purposes:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-text",children:'GET tracks/NotAnid []\n--\x3e BadRequest application/json {  "error" : {    "status" : 400,    "message" : "\n\nGET tracks/6YlOxoHWLjH6uVQvxUIUug []\n--\x3e OK application/json {  "album" : {    "album_type" : "album",    "arti\n'})})]})}function p(e={}){const{wrapper:o}={...(0,i.M)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},7052:(e,o,n)=>{n.d(o,{I:()=>a,M:()=>s});var t=n(6651);const i={},r=t.createContext(i);function s(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);