"use strict";(self.webpackChunkspotify_api_docs=self.webpackChunkspotify_api_docs||[]).push([[1510],{6524:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var s=o(2488),r=o(7052),a=o(4764);const n={id:"example_blazor_wasm",title:"Blazor WASM"},i=void 0,l={id:"example_blazor_wasm",title:"Blazor WASM",description:"Description",source:"@site/docs/example_blazor_wasm.md",sourceDirName:".",slug:"/example_blazor_wasm",permalink:"/SpotifyAPI-NET/docs/example_blazor_wasm",draft:!1,unlisted:!1,editUrl:"https://github.com/JohnnyCrazy/SpotifyAPI-NET/edit/master/SpotifyAPI.Docs/docs/example_blazor_wasm.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1727960431,formattedLastUpdatedAt:"Oct 3, 2024",frontMatter:{id:"example_blazor_wasm",title:"Blazor WASM"},sidebar:"docs",previous:{title:"ASP.NET",permalink:"/SpotifyAPI-NET/docs/example_asp"},next:{title:"Blazor ServerSide",permalink:"/SpotifyAPI-NET/docs/example_blazor"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Run it",id:"run-it",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["This small cross-platform web app runs on ",(0,s.jsx)(t.code,{children:"Blazor WebAssembly"}),", which was released on 19. May 2020. It allows to run C# code in any browser which supports WebAssembly. This allows to create .NET full-stack web projects without writing any JavaScript. Find more about ",(0,s.jsx)(t.a,{href:"https://devblogs.microsoft.com/aspnet/blazor-webassembly-3-2-0-now-available/",children:"Blazor WebAssembly here"})]}),"\n",(0,s.jsxs)(t.p,{children:["Since this library is compatible with ",(0,s.jsx)(t.code,{children:".NET Standard 2.1"}),", you can use all features of ",(0,s.jsx)(t.code,{children:"SpotifyAPI.Web"})," in your blazor wasm app. The example logs the user in via ",(0,s.jsx)(t.code,{children:"Implicit Grant"})," and does 2 user-related API requests from the browser. You can observe the requests from your browsers network tools."]}),"\n",(0,s.jsx)("img",{alt:"BlazorWASM Spotify Example",src:(0,a.c)("img/blazorwasm_homepage.png")}),"\n",(0,s.jsx)("img",{alt:"BlazorWASM Spotify Example - network tools",src:(0,a.c)("img/blazorwasm_network_tools.png")}),"\n",(0,s.jsx)(t.h2,{id:"run-it",children:"Run it"}),"\n",(0,s.jsxs)(t.p,{children:["Before running it, make sure you created an app in your ",(0,s.jsx)(t.a,{href:"https://developer.spotify.com/dashboard/",children:"spotify dashboard"})," and ",(0,s.jsx)(t.code,{children:"https://localhost:5543"})," is a redirect uri of it."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# Assumes linux and current working directory is the cloned repository\ncd SpotifyAPI.Web.Examples/Example.BlazorWASM\ndotnet restore\n\necho "{ \\"SPOTIFY_CLIENT_ID\\": \\"YourSpotifyClientId\\" }" > wwwroot/appsettings.json\ndotnet run\n\n# Visit https://localhost:5543\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.M)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7052:(e,t,o)=>{o.d(t,{I:()=>i,M:()=>n});var s=o(6651);const r={},a=s.createContext(r);function n(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);